/* Generated by restful-react */

import React from "react";
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from "restful-react";
export const SPEC_VERSION = "0.0.1"; 
/**
 * 刷视频请求消息类型
 */
export interface SvapiFeedShortVideoRequest {
  latestTime?: string;
  userId?: string;
  feedNum?: string;
}

/**
 * 刷视频响应消息类型
 */
export interface SvapiFeedShortVideoResponse {
  meta?: SvapiMetadata;
  videos?: SvapiVideo[];
  nextTime?: string;
}

export interface SvapiGetUserInfoResponse {
  user?: SvapiUser;
}

export interface SvapiGetVerificationCodeRequest {
  mobile?: string;
  email?: string;
}

export interface SvapiGetVerificationCodeResponse {
  codeId?: string;
}

/**
 * 获取视频信息响应消息类型
 */
export interface SvapiGetVideoByIdResponse {
  video?: SvapiVideo;
}

/**
 * 获取当前用户的发布视频列表响应消息类型
 */
export interface SvapiListPublishedVideoResponse {
  videoList?: SvapiVideo[];
  pagination?: SvapiPaginationResponse;
}

export interface SvapiLoginRequest {
  mobile?: string;
  email?: string;
  password?: string;
}

export interface SvapiLoginResponse {
  token?: string;
}

export interface SvapiMetadata {
  bizCode?: number;
  message?: string;
  domain?: string;
  reason?: string[];
}

export interface SvapiPaginationResponse {
  page?: number;
  total?: number;
  count?: number;
}

/**
 * 通用小文件单次上传请求消息类型
 */
export interface SvapiPreSign4UploadFileRequest {
  /**
   * md5 hash
   */
  hash?: string;
  /**
   * 文件类型，默认mp4
   */
  fileType?: string;
  /**
   * 文件大小，单位byte
   */
  size?: string;
  /**
   * 文件名
   */
  filename?: string;
}

/**
 * 通用小文件单次上传响应消息类型
 */
export interface SvapiPreSign4UploadFileResponse {
  /**
   * minio上传地址
   */
  url?: string;
  /**
   * 文件id
   */
  fileId?: string;
}

/**
 * 预注册上传视频请求消息类型
 */
export interface SvapiPreSign4UploadVideoRequest {
  /**
   * md5 hash
   */
  hash?: string;
  /**
   * 文件类型，默认mp4
   */
  fileType?: string;
  /**
   * 文件大小，单位byte
   */
  size?: string;
  /**
   * 文件名
   */
  filename?: string;
}

/**
 * 预注册上传视频响应消息类型
 */
export interface SvapiPreSign4UploadVideoResponse {
  /**
   * minio上传地址
   */
  url?: string;
  /**
   * 文件id
   */
  fileId?: string;
}

export interface SvapiRegisterRequest {
  mobile?: string;
  email?: string;
  password?: string;
  codeId?: string;
  code?: string;
}

export interface SvapiRegisterResponse {
  userId?: string;
}

/**
 * 通用确认上传完成请求消息类型
 */
export interface SvapiReportFileFinishUploadRequest {
  /**
   * 文件id
   */
  fileId?: string;
}

/**
 * 通用确认上传完成响应消息类型
 */
export interface SvapiReportFileFinishUploadResponse {
  /**
   * url
   */
  url?: string;
}

/**
 * 确认视频上传完成请求消息类型
 */
export interface SvapiReportVideoFinishUploadRequest {
  /**
   * 文件id
   */
  fileId?: string;
  /**
   * 视频id
   */
  videoId?: string;
  /**
   * 视频标题
   */
  title?: string;
  /**
   * 视频封面地址
   */
  coverUrl?: string;
  /**
   * 视频描述
   */
  description?: string;
  /**
   * 视频作者id
   */
  userId?: string;
}

/**
 * 确认视频上传完成响应消息类型
 */
export interface SvapiReportVideoFinishUploadResponse {
  /**
   * 视频播放地址
   */
  url?: string;
}

export interface SvapiUpdateUserInfoRequest {
  userId?: string;
  name?: string;
  avatar?: string;
  backgroundImage?: string;
  signature?: string;
}

// tslint:disable-next-line:no-empty-interface
export interface SvapiUpdateUserInfoResponse {}

export interface SvapiUser {
  id?: string;
  name?: string;
  avatar?: string;
  backgroundImage?: string;
  signature?: string;
  mobile?: string;
  email?: string;
  followCount?: string;
  followerCount?: string;
  totalFavorited?: string;
  workCount?: string;
  favoriteCount?: string;
}

export interface SvapiVideo {
  id?: string;
  author?: SvapiVideoAuthor;
  playUrl?: string;
  coverUrl?: string;
  favoriteCount?: string;
  commentCount?: string;
  isFavorite?: boolean;
  title?: string;
}

export interface SvapiVideoAuthor {
  id?: string;
  name?: string;
  avatar?: string;
  isFollowing?: boolean;
}

export interface ShortVideoCoreVideoServicePreSign4UploadCoverResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiPreSign4UploadFileResponse;
}

export type ShortVideoCoreVideoServicePreSign4UploadCoverProps = Omit<MutateProps<ShortVideoCoreVideoServicePreSign4UploadCoverResponse, unknown, void, SvapiPreSign4UploadFileRequest, void>, "path" | "verb">;

/**
 * 预注册上传封面
 */
export const ShortVideoCoreVideoServicePreSign4UploadCover = (props: ShortVideoCoreVideoServicePreSign4UploadCoverProps) => (
  <Mutate<ShortVideoCoreVideoServicePreSign4UploadCoverResponse, unknown, void, SvapiPreSign4UploadFileRequest, void>
    verb="PUT"
    path={`/cover/upload`}
    
    {...props}
  />
);

export type UseShortVideoCoreVideoServicePreSign4UploadCoverProps = Omit<UseMutateProps<ShortVideoCoreVideoServicePreSign4UploadCoverResponse, unknown, void, SvapiPreSign4UploadFileRequest, void>, "path" | "verb">;

/**
 * 预注册上传封面
 */
export const useShortVideoCoreVideoServicePreSign4UploadCover = (props: UseShortVideoCoreVideoServicePreSign4UploadCoverProps) => useMutate<ShortVideoCoreVideoServicePreSign4UploadCoverResponse, unknown, void, SvapiPreSign4UploadFileRequest, void>("PUT", `/cover/upload`, props);


export interface UserServiceGetVerificationCodeResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiGetVerificationCodeResponse;
}

export type UserServiceGetVerificationCodeProps = Omit<MutateProps<UserServiceGetVerificationCodeResponse, unknown, void, SvapiGetVerificationCodeRequest, void>, "path" | "verb">;

/**
 * 获取验证码
 */
export const UserServiceGetVerificationCode = (props: UserServiceGetVerificationCodeProps) => (
  <Mutate<UserServiceGetVerificationCodeResponse, unknown, void, SvapiGetVerificationCodeRequest, void>
    verb="POST"
    path={`/user/code`}
    
    {...props}
  />
);

export type UseUserServiceGetVerificationCodeProps = Omit<UseMutateProps<UserServiceGetVerificationCodeResponse, unknown, void, SvapiGetVerificationCodeRequest, void>, "path" | "verb">;

/**
 * 获取验证码
 */
export const useUserServiceGetVerificationCode = (props: UseUserServiceGetVerificationCodeProps) => useMutate<UserServiceGetVerificationCodeResponse, unknown, void, SvapiGetVerificationCodeRequest, void>("POST", `/user/code`, props);


export interface UserServiceGetUserInfoResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiGetUserInfoResponse;
}

export interface UserServiceGetUserInfoQueryParams {
  userId?: string;
}

export type UserServiceGetUserInfoProps = Omit<GetProps<UserServiceGetUserInfoResponse, unknown, UserServiceGetUserInfoQueryParams, void>, "path">;

/**
 * 获取用户信息
 */
export const UserServiceGetUserInfo = (props: UserServiceGetUserInfoProps) => (
  <Get<UserServiceGetUserInfoResponse, unknown, UserServiceGetUserInfoQueryParams, void>
    path={`/user/info`}
    
    {...props}
  />
);

export type UseUserServiceGetUserInfoProps = Omit<UseGetProps<UserServiceGetUserInfoResponse, unknown, UserServiceGetUserInfoQueryParams, void>, "path">;

/**
 * 获取用户信息
 */
export const useUserServiceGetUserInfo = (props: UseUserServiceGetUserInfoProps) => useGet<UserServiceGetUserInfoResponse, unknown, UserServiceGetUserInfoQueryParams, void>(`/user/info`, props);


export interface UserServiceUpdateUserInfoResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiUpdateUserInfoResponse;
}

export type UserServiceUpdateUserInfoProps = Omit<MutateProps<UserServiceUpdateUserInfoResponse, unknown, void, SvapiUpdateUserInfoRequest, void>, "path" | "verb">;

/**
 * 更新用户信息
 */
export const UserServiceUpdateUserInfo = (props: UserServiceUpdateUserInfoProps) => (
  <Mutate<UserServiceUpdateUserInfoResponse, unknown, void, SvapiUpdateUserInfoRequest, void>
    verb="PUT"
    path={`/user/info`}
    
    {...props}
  />
);

export type UseUserServiceUpdateUserInfoProps = Omit<UseMutateProps<UserServiceUpdateUserInfoResponse, unknown, void, SvapiUpdateUserInfoRequest, void>, "path" | "verb">;

/**
 * 更新用户信息
 */
export const useUserServiceUpdateUserInfo = (props: UseUserServiceUpdateUserInfoProps) => useMutate<UserServiceUpdateUserInfoResponse, unknown, void, SvapiUpdateUserInfoRequest, void>("PUT", `/user/info`, props);


export interface UserServiceLoginResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiLoginResponse;
}

export type UserServiceLoginProps = Omit<MutateProps<UserServiceLoginResponse, unknown, void, SvapiLoginRequest, void>, "path" | "verb">;

/**
 * 登录
 */
export const UserServiceLogin = (props: UserServiceLoginProps) => (
  <Mutate<UserServiceLoginResponse, unknown, void, SvapiLoginRequest, void>
    verb="POST"
    path={`/user/login`}
    
    {...props}
  />
);

export type UseUserServiceLoginProps = Omit<UseMutateProps<UserServiceLoginResponse, unknown, void, SvapiLoginRequest, void>, "path" | "verb">;

/**
 * 登录
 */
export const useUserServiceLogin = (props: UseUserServiceLoginProps) => useMutate<UserServiceLoginResponse, unknown, void, SvapiLoginRequest, void>("POST", `/user/login`, props);


export interface UserServiceRegisterResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiRegisterResponse;
}

export type UserServiceRegisterProps = Omit<MutateProps<UserServiceRegisterResponse, unknown, void, SvapiRegisterRequest, void>, "path" | "verb">;

/**
 * 注册
 */
export const UserServiceRegister = (props: UserServiceRegisterProps) => (
  <Mutate<UserServiceRegisterResponse, unknown, void, SvapiRegisterRequest, void>
    verb="POST"
    path={`/user/register`}
    
    {...props}
  />
);

export type UseUserServiceRegisterProps = Omit<UseMutateProps<UserServiceRegisterResponse, unknown, void, SvapiRegisterRequest, void>, "path" | "verb">;

/**
 * 注册
 */
export const useUserServiceRegister = (props: UseUserServiceRegisterProps) => useMutate<UserServiceRegisterResponse, unknown, void, SvapiRegisterRequest, void>("POST", `/user/register`, props);


export interface ShortVideoCoreVideoServicePreSign4UploadFileResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiPreSign4UploadVideoResponse;
}

export type ShortVideoCoreVideoServicePreSign4UploadFileProps = Omit<MutateProps<ShortVideoCoreVideoServicePreSign4UploadFileResponse, unknown, void, SvapiPreSign4UploadVideoRequest, void>, "path" | "verb">;

/**
 * 预注册上传视频
 */
export const ShortVideoCoreVideoServicePreSign4UploadFile = (props: ShortVideoCoreVideoServicePreSign4UploadFileProps) => (
  <Mutate<ShortVideoCoreVideoServicePreSign4UploadFileResponse, unknown, void, SvapiPreSign4UploadVideoRequest, void>
    verb="POST"
    path={`/video/upload`}
    
    {...props}
  />
);

export type UseShortVideoCoreVideoServicePreSign4UploadFileProps = Omit<UseMutateProps<ShortVideoCoreVideoServicePreSign4UploadFileResponse, unknown, void, SvapiPreSign4UploadVideoRequest, void>, "path" | "verb">;

/**
 * 预注册上传视频
 */
export const useShortVideoCoreVideoServicePreSign4UploadFile = (props: UseShortVideoCoreVideoServicePreSign4UploadFileProps) => useMutate<ShortVideoCoreVideoServicePreSign4UploadFileResponse, unknown, void, SvapiPreSign4UploadVideoRequest, void>("POST", `/video/upload`, props);


export interface ShortVideoCoreVideoServiceFeedShortVideoResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiFeedShortVideoResponse;
}

export type ShortVideoCoreVideoServiceFeedShortVideoProps = Omit<MutateProps<ShortVideoCoreVideoServiceFeedShortVideoResponse, unknown, void, SvapiFeedShortVideoRequest, void>, "path" | "verb">;

/**
 * 刷视频
 */
export const ShortVideoCoreVideoServiceFeedShortVideo = (props: ShortVideoCoreVideoServiceFeedShortVideoProps) => (
  <Mutate<ShortVideoCoreVideoServiceFeedShortVideoResponse, unknown, void, SvapiFeedShortVideoRequest, void>
    verb="POST"
    path={`/videos/feed`}
    
    {...props}
  />
);

export type UseShortVideoCoreVideoServiceFeedShortVideoProps = Omit<UseMutateProps<ShortVideoCoreVideoServiceFeedShortVideoResponse, unknown, void, SvapiFeedShortVideoRequest, void>, "path" | "verb">;

/**
 * 刷视频
 */
export const useShortVideoCoreVideoServiceFeedShortVideo = (props: UseShortVideoCoreVideoServiceFeedShortVideoProps) => useMutate<ShortVideoCoreVideoServiceFeedShortVideoResponse, unknown, void, SvapiFeedShortVideoRequest, void>("POST", `/videos/feed`, props);


export interface ShortVideoCoreVideoServiceListPublishedVideoResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiListPublishedVideoResponse;
}

export interface ShortVideoCoreVideoServiceListPublishedVideoQueryParams {
  userId?: string;
  "pagination.page"?: number;
  "pagination.size"?: number;
}

export type ShortVideoCoreVideoServiceListPublishedVideoProps = Omit<GetProps<ShortVideoCoreVideoServiceListPublishedVideoResponse, unknown, ShortVideoCoreVideoServiceListPublishedVideoQueryParams, void>, "path">;

/**
 * 获取当前用户的发布视频列表
 */
export const ShortVideoCoreVideoServiceListPublishedVideo = (props: ShortVideoCoreVideoServiceListPublishedVideoProps) => (
  <Get<ShortVideoCoreVideoServiceListPublishedVideoResponse, unknown, ShortVideoCoreVideoServiceListPublishedVideoQueryParams, void>
    path={`/videos/list`}
    
    {...props}
  />
);

export type UseShortVideoCoreVideoServiceListPublishedVideoProps = Omit<UseGetProps<ShortVideoCoreVideoServiceListPublishedVideoResponse, unknown, ShortVideoCoreVideoServiceListPublishedVideoQueryParams, void>, "path">;

/**
 * 获取当前用户的发布视频列表
 */
export const useShortVideoCoreVideoServiceListPublishedVideo = (props: UseShortVideoCoreVideoServiceListPublishedVideoProps) => useGet<ShortVideoCoreVideoServiceListPublishedVideoResponse, unknown, ShortVideoCoreVideoServiceListPublishedVideoQueryParams, void>(`/videos/list`, props);


export interface ShortVideoCoreVideoServiceReportVideoFinishUploadResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiReportVideoFinishUploadResponse;
}

export interface ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams {
  /**
   * 文件id
   */
  fileId: string
}

export type ShortVideoCoreVideoServiceReportVideoFinishUploadProps = Omit<MutateProps<ShortVideoCoreVideoServiceReportVideoFinishUploadResponse, unknown, void, SvapiReportVideoFinishUploadRequest, ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams>, "path" | "verb"> & ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams;

/**
 * 确认视频上传完成
 */
export const ShortVideoCoreVideoServiceReportVideoFinishUpload = ({fileId, ...props}: ShortVideoCoreVideoServiceReportVideoFinishUploadProps) => (
  <Mutate<ShortVideoCoreVideoServiceReportVideoFinishUploadResponse, unknown, void, SvapiReportVideoFinishUploadRequest, ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams>
    verb="PUT"
    path={`/videos/${fileId}/finish`}
    
    {...props}
  />
);

export type UseShortVideoCoreVideoServiceReportVideoFinishUploadProps = Omit<UseMutateProps<ShortVideoCoreVideoServiceReportVideoFinishUploadResponse, unknown, void, SvapiReportVideoFinishUploadRequest, ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams>, "path" | "verb"> & ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams;

/**
 * 确认视频上传完成
 */
export const useShortVideoCoreVideoServiceReportVideoFinishUpload = ({fileId, ...props}: UseShortVideoCoreVideoServiceReportVideoFinishUploadProps) => useMutate<ShortVideoCoreVideoServiceReportVideoFinishUploadResponse, unknown, void, SvapiReportVideoFinishUploadRequest, ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams>("PUT", (paramsInPath: ShortVideoCoreVideoServiceReportVideoFinishUploadPathParams) => `/videos/${paramsInPath.fileId}/finish`, {  pathParams: { fileId }, ...props });


export interface ShortVideoCoreVideoServiceGetVideoByIdResponse {
  /**
   * Status code. Zero means success.
   */
  code?: number;
  /**
   * Status message. Could be displayed to user.
   */
  msg?: string;
  data?: SvapiGetVideoByIdResponse;
}

export interface ShortVideoCoreVideoServiceGetVideoByIdPathParams {
  videoId: string
}

export type ShortVideoCoreVideoServiceGetVideoByIdProps = Omit<GetProps<ShortVideoCoreVideoServiceGetVideoByIdResponse, unknown, void, ShortVideoCoreVideoServiceGetVideoByIdPathParams>, "path"> & ShortVideoCoreVideoServiceGetVideoByIdPathParams;

/**
 * 获取视频信息
 */
export const ShortVideoCoreVideoServiceGetVideoById = ({videoId, ...props}: ShortVideoCoreVideoServiceGetVideoByIdProps) => (
  <Get<ShortVideoCoreVideoServiceGetVideoByIdResponse, unknown, void, ShortVideoCoreVideoServiceGetVideoByIdPathParams>
    path={`/videos/${videoId}`}
    
    {...props}
  />
);

export type UseShortVideoCoreVideoServiceGetVideoByIdProps = Omit<UseGetProps<ShortVideoCoreVideoServiceGetVideoByIdResponse, unknown, void, ShortVideoCoreVideoServiceGetVideoByIdPathParams>, "path"> & ShortVideoCoreVideoServiceGetVideoByIdPathParams;

/**
 * 获取视频信息
 */
export const useShortVideoCoreVideoServiceGetVideoById = ({videoId, ...props}: UseShortVideoCoreVideoServiceGetVideoByIdProps) => useGet<ShortVideoCoreVideoServiceGetVideoByIdResponse, unknown, void, ShortVideoCoreVideoServiceGetVideoByIdPathParams>((paramsInPath: ShortVideoCoreVideoServiceGetVideoByIdPathParams) => `/videos/${paramsInPath.videoId}`, {  pathParams: { videoId }, ...props });

