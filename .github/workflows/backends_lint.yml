name: Lint Backend Code
run-name: 'Lint Backend Code ${{github.workflow}} #${{ github.event.pull_request.number }}'
on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches: [main, master]
    paths:
      - 'backend/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [
          'backend/gopkgs',
          'backend/baseService',
          'backend/shortVideoApiService',
          'backend/shortVideoCoreService'
        ]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1

      - name: Setup
        uses: actions/setup-node@v3
        with:
          go-version: 1.22

      - name: cd
        run: |
          cd ${{ matrix.project }}

      - uses: reviewdog/action-golangci-lint@v2
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github_token: ${{ secrets.github_token }}
          golangci_lint_flags: "--timeout 10m --exclude-use-default=false --exclude-files .*pb\.go$"
          level: "error"
          reporter: github-pr-check
          filter_mode: nofilter
          workdir: ${{ matrix.project }}

      - name: Build ${{ matrix.project }}
        run: go build -v ./...

      - name: Test ${{ matrix.project }}
        run: go test -v ./...

      - name: Run coverage ${{ matrix.project }}
        run: go test -race -coverprofile=coverage.out -covermode=atomic

